import java.text.SimpleDateFormat

buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath 'me.tatarka:gradle-retrolambda:3.2.1'
    }
}

apply plugin: 'com.android.application'
apply plugin: 'me.tatarka.retrolambda'

repositories {
    maven { url 'https://zendesk.artifactoryonline.com/zendesk/repo' }
    maven { url 'https://oss.sonatype.org/content/repositories/snapshots/' }
}


def generateVersionCode() {
    def now = new Date()
    def formatter = new SimpleDateFormat("yyMMddHH")
    Integer.parseInt(formatter.format(now))
}

android {
    compileSdkVersion 25
    buildToolsVersion "25.0.1"

    signingConfigs {
        debug {
            keyAlias "androiddebugkey"
            storeFile file("../../Hello-Android-Internal.keystore")
            storePassword "android"
        }
        release {
            storeFile file("../../Hello-Android-Release.keystore")
            storePassword "hellogoodbye"
            keyAlias "suripu"
            keyPassword "hellogoodbye"
        }
    }

    defaultConfig {
        applicationId "is.hello.sense"
        minSdkVersion 19
        targetSdkVersion 25
        versionCode generateVersionCode()
        versionName "2.1.1"
        multiDexEnabled true
        vectorDrawables.useSupportLibrary = true
    }

    dataBinding {
        enabled = true
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    packagingOptions {
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE.txt'
        exclude 'LICENSE'
        exclude 'LICENSE.txt'
    }

    buildTypes {
        def TYPE_INT = "int"
        def TYPE_BOOLEAN = "boolean"
        def TYPE_STRING = "String"
        def TYPE_RES_STRING = "string"

        def MIN_LOGGING_LEVEL = "MIN_LOGGING_LEVEL"
        def DEBUG_SCREEN_ENABLED = "DEBUG_SCREEN_ENABLED"
        def CLIENT_ID = "CLIENT_ID"
        def CLIENT_SECRET = "CLIENT_SECRET"
        def BASE_URL = "BASE_URL"
        def HOCKEY_API_KEY = "HOCKEY_API_KEY"
        def SEGMENT_API_KEY = "SEGMENT_API_KEY"
        def FACEBOOK_APP_ID = "FACEBOOK_APP_ID"
        def GCM_AUTH_ENTITY_IDS = "GCM_AUTH_TOKEN_IDS"
        def IS_BETA = "IS_BETA"

        def TRUE = "true"
        def FALSE = "false"


        debug {
            buildConfigField TYPE_INT, MIN_LOGGING_LEVEL, "android.util.Log.VERBOSE"
            buildConfigField TYPE_BOOLEAN, DEBUG_SCREEN_ENABLED, TRUE
            buildConfigField TYPE_STRING, CLIENT_ID, '"' + "android_dev" + '"'
            buildConfigField TYPE_STRING, CLIENT_SECRET, '"' + "99999secret" + '"'
            buildConfigField TYPE_STRING, BASE_URL, '"' + "https://dev-api.hello.is" + '"'
            buildConfigField TYPE_STRING, HOCKEY_API_KEY, '"' + "805427569ce2035dcda0b99e4d984256" + '"'
            buildConfigField TYPE_STRING, SEGMENT_API_KEY, '"' + "AnMchQr1VXQhPKjeYuoEEQ7pPRlow9SO" + '"'
            resValue TYPE_RES_STRING, FACEBOOK_APP_ID, '"' + "372438546161587" + '"'
            buildConfigField TYPE_STRING, GCM_AUTH_ENTITY_IDS, '"' + "88512303154,222711285636" + '"'
            buildConfigField TYPE_BOOLEAN, IS_BETA, TRUE

            signingConfig signingConfigs.debug

            applicationIdSuffix ".debug"
            minifyEnabled false // when we hit the 0xffff method limit, switch this to true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-deadcode-rules.pro'
        }

        development {

            initWith debug
            signingConfig signingConfigs.debug

            applicationIdSuffix ".development"


        }

        release {
            buildConfigField TYPE_INT, MIN_LOGGING_LEVEL, "android.util.Log.WARN"
            buildConfigField TYPE_BOOLEAN, DEBUG_SCREEN_ENABLED, FALSE
            buildConfigField TYPE_STRING, CLIENT_ID, '"' + "8d3c1664-05ae-47e4-bcdb-477489590aa4" + '"'
            buildConfigField TYPE_STRING, CLIENT_SECRET, '"' + "4f771f6f-5c10-4104-bbc6-3333f5b11bf9" + '"'
            buildConfigField TYPE_STRING, BASE_URL, '"' + "https://api.hello.is" + '"'
            buildConfigField TYPE_STRING, SEGMENT_API_KEY, '"' + "UiFCuqdEpi6STaMCx3bo70Hii0XvWnOK" + '"'
            resValue TYPE_RES_STRING, FACEBOOK_APP_ID, '"' + "372438546161587" + '"'
            buildConfigField TYPE_STRING, GCM_AUTH_ENTITY_IDS, '"' + "88512303154,222711285636" + '"'
            buildConfigField TYPE_BOOLEAN, IS_BETA, FALSE

            signingConfig signingConfigs.release

            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-deadcode-rules.pro'
        }


    }

    sourceSets {
        development {
            manifest.srcFile 'src/debug_menu/AndroidManifest.xml'
            java.srcDirs = ['src/debug_menu/java', 'src/development/java']
            res.srcDirs = ['src/debug_menu/res', 'src/development/res']
            assets.srcDirs = ['src/debug_menu/assets', 'src/development/assets']
        }
        debug {
            manifest.srcFile 'src/debug_menu/AndroidManifest.xml'
            java.srcDirs = ['src/debug_menu/java', 'src/debug/java']
            res.srcDirs = ['src/debug_menu/res', 'src/debug/res']
            assets.srcDirs = ['src/debug_menu/assets', 'src/debug/assets']
        }
    }

    productFlavors {

        // Lifetime support - reduced feature set supported by client in order to reduce server costs
        lts {
        }

        full {
        }
    }
}

retrolambda {
    def javaHome = System.getenv('JAVA_HOME')
    if (javaHome != null) { // Manual, cross-platform
        jdk javaHome.trim()
    } else { // Magic, OS X only
        def stdout = new ByteArrayOutputStream()
        exec {
            commandLine "/usr/libexec/java_home", "-v", "1.8"
            standardOutput = stdout
        }
        jdk "$stdout".trim()
    }
}

/**
 * Zendesk doesn't pass Java 7 validation, so we have to turn off
 * verification on the JVM in order to run tests. If we remove
 * Zendesk from the project, remove this workaround. You will also
 * need to remove this from Android Studio's JUnit / Tests run
 * configurations. Workaround from
 * <a href="https://github.com/evant/android-studio-unit-test-plugin/issues/35">this bug</a>
 */
tasks.whenTaskAdded { theTask ->
    def taskName = theTask.name.toString()
    if (taskName.startsWith("test") && taskName.endsWith("UnitTest")) {
        /**
         * Listen for when robolectric adds the 'testDebug' task and when it does, add the -noverify
         * option to that task's jvmArgs.  This allows us to turn off byte code verification when
         * running our unit tests.
         */
        theTask.jvmArgs('-noverify')
    }
}

dependencies {

    // Is there anything we don't depend on?

    compile fileTree(include: ['*.jar'], dir: 'libs')
    // !! If you remove this, remove the above workaround.
    compile('com.zendesk:sdk:1.4.1.1') {
        // When you remove this rule, you will also need to remove
        // `styles_zendesk.xml` and the first attr in `attrs.xml`.
        exclude group: 'com.android.support'
    }
    // Necessary to be able to compile and run tests with

    // Android Studio 1.3 + build tools 1.3. Remove when

    // retrolambda releases an update.
    // required for testing our fragments. https://github.com/robolectric/robolectric/issues/1932

    compile 'com.android.support:multidex:1.0.1'
    compile 'com.squareup.dagger:dagger:1.2.2'
    compile 'io.reactivex:rxjava:1.0.9'
    compile 'com.squareup.retrofit:retrofit:1.9.0'
    compile 'com.squareup.okhttp:okhttp-urlconnection:2.4.0'
    compile 'com.squareup.okhttp:okhttp:2.4.0'
    compile 'com.google.code.gson:gson:2.4'
    compile 'net.danlew:android.joda:2.7.2'
    compile 'com.segment.analytics.android:analytics:4.1.0'
    compile 'com.android.support:support-v13:25.0.1'
    compile 'com.android.support:recyclerview-v7:25.0.1'
    compile 'com.android.support:customtabs:25.0.1'
    compile 'com.android.support:design:25.0.1'

    compile 'com.google.firebase:firebase-core:9.8.0'
    compile 'com.google.firebase:firebase-messaging:9.8.0'
    compile 'com.google.android.gms:play-services-location:9.8.0'

    compile 'com.squareup.picasso:picasso:2.5.3-SNAPSHOT'
    compile 'me.grantland:autofittextview:0.2.1'
    compile 'de.hdodenhof:circleimageview:2.0.0'
    compile 'is.hello.commonsense:ble:2017.04.17.1'
    compile 'is.hello:anime-android-go-99:0.5.0'
    compile 'com.facebook.android:facebook-android-sdk:4.13.1'
    compile 'no.nordicsemi.android:dfu:0.6.3'
    compile 'com.bugsnag:bugsnag-android:3.2.6'
    compile 'com.luckycatlabs:SunriseSunsetCalculator:1.2'

    testCompile 'org.robolectric:shadows-multidex:3.2.1'
    testCompile 'org.robolectric:robolectric:3.2.1'
    testCompile 'junit:junit:4.12'
    testCompile 'org.mockito:mockito-core:1.10.19'
    testCompile 'org.hamcrest:hamcrest-library:1.3'
    testCompile 'org.khronos:opengl-api:gl1.1-android-2.1_r1'
    testCompile 'com.squareup.leakcanary:leakcanary-android-no-op:1.5'
    debugCompile 'net.hockeyapp.android:HockeySDK:3.5.0'
    debugCompile 'com.squareup.leakcanary:leakcanary-android:1.5'
    developmentCompile 'net.hockeyapp.android:HockeySDK:3.5.0'
    developmentCompile 'com.squareup.leakcanary:leakcanary-android-no-op:1.5'
    provided 'com.squareup.dagger:dagger-compiler:1.2.2'
    releaseCompile 'com.squareup.leakcanary:leakcanary-android-no-op:1.5'
}

//required to be placed at end of build file to detect com.google.firebase version
//otherwise will default to version 9.0.0
apply plugin: 'com.google.gms.google-services'